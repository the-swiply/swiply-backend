syntax = "proto3";

option go_package = "github.com/the-swiply/profile/pkg/api/profile";

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

package swiply.profile;

service Profile {
  rpc Create(CreateProfileRequest) returns (CreateProfileResponse) {
    option (google.api.http) = {
      post: "/v1/profile/create"
      body: "*"
    };
  }

  rpc Update(UpdateProfileRequest) returns (UpdateProfileResponse) {
    option (google.api.http) = {
      post: "/v1/profile/update"
      body: "*"
    };
  }

  rpc Get(GetProfileRequest) returns (GetProfileResponse) {
    option (google.api.http) = {
      get: "/v1/profile/{id}"
    };
  }

  rpc WhoAmI(WhoAmIRequest) returns (WhoAmIResponse) {
    option (google.api.http) = {
      get: "/v1/profile/who-am-i"
    };
  }

  rpc Interaction(InteractionRequest) returns (InteractionResponse) {
    option (google.api.http) = {
      post: "/v1/interaction/create"
      body: "*"
    };
  }

  rpc Liked(LikedRequest) returns (LikedResponse) {
    option (google.api.http) = {
      get: "/v1/profile/liked"
    };
  }

  rpc LikedMe(LikedMeRequest) returns (LikedMeResponse) {
    option (google.api.http) = {
      get: "/v1/profile/liked-me"
    };
  }

  rpc ListInterests(ListInterestsRequest) returns (ListInterestsResponse) {
    option (google.api.http) = {
      get: "/v1/interests"
    };
  }

  rpc ListInteractions(ListInteractionsRequest) returns (ListInteractionsResponse) {
    option (google.api.http) = {
      get: "/v1/interaction"
    };
  }

  rpc ListProfiles(ListProfilesRequest) returns (ListProfilesResponse) {
    option (google.api.http) = {
      get: "/v1/profile"
    };
  }

  rpc ChangeAvailability(ChangeAvailabilityRequest) returns (ChangeAvailabilityResponse) {
    option (google.api.http) = {
      post: "/v1/profile/change-availability"
      body: "*"
    };
  }

  rpc AddUserOrganization(AddUserOrganizationRequest) returns (AddUserOrganizationResponse) {
    option (google.api.http) = {
      post: "/v1/profile/add-user-organization"
      body: "*"
    };
  }

  rpc RemoveUserOrganization(RemoveUserOrganizationRequest) returns (RemoveUserOrganizationResponse) {
    option (google.api.http) = {
      post: "/v1/profile/remove-user-organization"
      body: "*"
    };
  }

  rpc SendAuthorizationCode(SendAuthorizationCodeRequest) returns (SendAuthorizationCodeResponse) {
    option (google.api.http) = {
      post: "/v1/profile/send-authorization-code"
      body: "*"
    };
  }

  rpc ValidateOrganization(ValidateOrganizationRequest) returns (ValidateOrganizationResponse) {
    option (google.api.http) = {
      post: "/v1/profile/validate-organization"
      body: "*"
    };
  }

  rpc ListMatches(ListMatchesRequest) returns (ListMatchesResponse) {
    option (google.api.http) = {
      get: "/v1/profile/list-matches"
    };
  }
}

service Photo {
  rpc Create(CreatePhotoRequest) returns (CreatePhotoResponse) {
    option (google.api.http) = {
      post: "/v1/photo/create"
      body: "*"
    };
  }

  rpc Get(GetPhotoRequest) returns (GetPhotoResponse) {
    option (google.api.http) = {
      get: "/v1/photo/{profile_id}/{photo_id}"
    };
  }

  rpc List(ListPhotoRequest) returns (ListPhotoResponse) {
    option (google.api.http) = {
      get: "/v1/photo/{profile_id}"
    };
  }

  rpc Delete(DeletePhotoRequest) returns (DeletePhotoResponse) {
    option (google.api.http) = {
      post: "/v1/photo/delete"
      body: "*"
    };
  }

  rpc Reorder(ReorderPhotoRequest) returns (ReorderPhotoResponse) {
    option (google.api.http) = {
      post: "/v1/photo/reorder"
      body: "*"
    };
  }
}

message Interest {
  int64 id = 1;
  string definition = 2;
}

enum Gender {
  GENDER_UNSPECIFIED = 0;
  MALE = 1;
  FEMALE = 2;
}

enum SubscriptionType {
  SUBSCRIPTION_TYPE_UNSPECIFIED = 0;
  STANDARD = 1;
  PRIMARY = 2;
}

enum InteractionType {
  INTERACTION_TYPE_UNSPECIFIED = 0;
  LIKE = 1;
  DISLIKE = 2;
}

message Location {
  double lat = 1;
  double long = 2;
}

message UserOrganization {
  int64 id = 1;
  string name = 2;
  string email = 3;
  bool is_valid = 4;
  int64 organization_id = 5;
}

message UserProfile {
  string id = 1;
  string email = 2;
  string name = 3;
  repeated Interest interests = 4;
  google.protobuf.Timestamp birth_day = 5;
  Gender gender = 6;
  string info = 7;
  SubscriptionType subscription_type = 8;
  Location location = 9;
  string city = 10;
  string work = 11;
  string education = 12;
  bool is_blocked = 13;
  repeated UserOrganization organizations = 14;
}

message Interaction {
  string from = 1;
  string to = 2;
  InteractionType type = 3;
}

// Create
message CreateProfileRequest {
  string email = 1;
  string name = 2;
  repeated Interest interests = 3;
  google.protobuf.Timestamp birth_day = 4;
  Gender gender = 5;
  string info = 6;
  SubscriptionType subscription_type = 7;
  Location location = 8;
  string city = 9;
  string work = 10;
  string education = 11;
}
message CreateProfileResponse {
  string id = 1;
}

// Update
message UpdateProfileRequest {
  string name = 1;
  repeated Interest interests = 2;
  google.protobuf.Timestamp birth_day = 3;
  Gender gender = 4;
  string info = 5;
  SubscriptionType subscription_type = 6;
  Location location = 7;
  string city = 8;
  string work = 9;
  string education = 10;
}
message UpdateProfileResponse {
  string id = 1;
}

// Get
message GetProfileRequest {
  string id = 1;
}
message GetProfileResponse {
  UserProfile user_profile = 3;
}

// WhoAmI
message WhoAmIRequest {}
message WhoAmIResponse {
  string id = 1;
}

// Interaction
message InteractionRequest {
  string id = 1;
  InteractionType type = 2;
}
message InteractionResponse {}

// Liked
message LikedRequest {}
message LikedResponse {
  repeated string ids = 1;
}

// LikedMe
message LikedMeRequest {}
message LikedMeResponse {
  repeated string ids = 1;
}

// ListInterests
message ListInterestsRequest {}
message ListInterestsResponse {
  repeated Interest interests = 1;
}

// ListInteractions
message ListInteractionsRequest {
  google.protobuf.Timestamp after = 1;
}
message ListInteractionsResponse {
  repeated Interaction interactions = 1;
}

// ListProfiles
message ListProfilesRequest {
  google.protobuf.Timestamp updated_after = 1;
}
message ListProfilesResponse {
  repeated UserProfile profiles = 1;
}

// ChangeAvailability
message ChangeAvailabilityRequest {
  string id = 1;
  bool is_blocked = 2;
}

message ChangeAvailabilityResponse {}

// AddUserOrganization
message AddUserOrganizationRequest {
  string email = 1;
}

message AddUserOrganizationResponse {
  UserOrganization organization = 1;
}

// RemoveUserOrganization
message RemoveUserOrganizationRequest {
  int64 id = 1;
}

message RemoveUserOrganizationResponse {}

// SendAuthorizationCode
message SendAuthorizationCodeRequest {
  string email = 1;
}

message SendAuthorizationCodeResponse {}

// ValidateOrganization
message ValidateOrganizationRequest {
  int64 id = 1;
  string code = 2;
}

message ValidateOrganizationResponse{}

// ListMatches
message ListMatchesRequest {}

message ListMatchesResponse {
  repeated string ids = 1;
}

message ProfilePhoto {
  string id = 1;
  bytes content = 2;
}

message CreatePhotoRequest {
  bytes content = 1;
}
message CreatePhotoResponse {
  string id = 1;
}

message GetPhotoRequest {
  string profile_id = 1;
  string photo_id = 2;
}
message GetPhotoResponse {
  ProfilePhoto photo = 1;
}

message ListPhotoRequest {
  string profile_id = 1;
}
message ListPhotoResponse {
  repeated ProfilePhoto photos = 1;
}

message DeletePhotoRequest {
  string id = 1;
}
message DeletePhotoResponse {
  string id = 1;
}

message ReorderPhotoRequest {
  repeated string ids = 1;
}
message ReorderPhotoResponse {}